{
  "name": "ResizeBox",
  "props": {
    ":height": {
      "default": "-",
      "value": "",
      "type": "number",
      "description": "Height, controlled properties",
      "description_zh": "高度，受控属性"
    },
    ":width": {
      "default": "-",
      "value": "",
      "type": "number",
      "description": "Width, controlled property",
      "description_zh": "宽度，受控属性"
    },
    "component": {
      "default": "div",
      "value": "",
      "type": "string",
      "description": "HTML tag for the expansion box",
      "description_zh": "伸缩框的 html 标签"
    },
    ":directions": {
      "default": "['right']",
      "value": "",
      "type": "Array<'left' | 'right' | 'top' | 'bottom'>",
      "description": "Edges that can be scaled can be used up, down, left, and right, and the default is right.",
      "description_zh": "可以进行伸缩的边，有上、下、左、右可以使用，默认是右方向。"
    },
    "className": {
      "default": "-",
      "value": "",
      "type": "string | string[]",
      "description": "Node class name",
      "description_zh": "节点类名"
    },
    ":resizeIcons": {
      "default": "{}",
      "value": "",
      "type": "{top?: ReactNode;bottom?: ReactNode;left?: ReactNode;right?: ReactNode;}",
      "description": "Customize the icon of the telescopic pole, all four directions support customization.",
      "description_zh": "定制伸缩杆的图标，四个方向都支持定制。"
    },
    ":resizeTriggers": {
      "default": "{}",
      "value": "",
      "type": "{top?: ReactNode;bottom?: ReactNode;left?: ReactNode;right?: ReactNode;}",
      "description": "Customize the content of the telescopic pole, and all four directions support customization.",
      "description_zh": "定制伸缩杆的内容，四个方向都支持定制。"
    },
    ":style": {
      "default": "-",
      "value": "",
      "type": "CSSProperties",
      "description": "Node style",
      "description_zh": "节点样式"
    }
  },
  "methods": [],
  "link": "https://arco.design/react/components/resize-box#api",
  "link_zh": "https://arco.design/react/components/resize-box#api",
  "events": [
    {
      "name": "onMoving",
      "description": "Callbacks in dragging",
      "description_zh": "拖拽中的回调",
      "params": "(e: MouseEvent, size: { width: number; height: number }) => void",
      "value": ""
    },
    {
      "name": "onMovingEnd",
      "description": "The callback after the drag is over",
      "description_zh": "拖拽结束之后的回调",
      "params": "() => void",
      "value": ""
    },
    {
      "name": "onMovingStart",
      "description": "Start dragging the previous callback",
      "description_zh": "开始拖拽之前的回调",
      "params": "() => void",
      "value": ""
    }
  ],
  "typeDetail": {}
}
